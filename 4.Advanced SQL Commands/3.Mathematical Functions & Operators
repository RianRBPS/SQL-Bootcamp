VERSÃO DO CURSO DESATUALIZADA

+	addition	2 + 3	5
-	subtraction	2 - 3	-1
*	multiplication	2 * 3	6
/	division (integer division truncates the result)	4 / 2	2
%	modulo (remainder)	5 % 4	1
^	exponentiation (associates left to right)	2.0 ^ 3.0	8
|/	square root	|/ 25.0	5
||/	cube root	||/ 27.0	3
!	factorial (deprecated, use factorial() instead)	5 !	120
!!	factorial as a prefix operator (deprecated, use factorial() instead)	!! 5	120
@	absolute value	@ -5.0	5
&	bitwise AND	91 & 15	11
|	bitwise OR	32 | 3	35
#	bitwise XOR	17 # 5	20
~	bitwise NOT	~1	-2
<<	bitwise shift left	1 << 4	16
>>	bitwise shift right	8 >> 2	2

==============================================================================================

VERSÃO ATUAL
 
Operator

Description

Example(s)

numeric_type + numeric_type → numeric_type

Addition

2 + 3 → 5

+ numeric_type → numeric_type

Unary plus (no operation)

+ 3.5 → 3.5

numeric_type - numeric_type → numeric_type

Subtraction

2 - 3 → -1

- numeric_type → numeric_type

Negation

- (-4) → 4

numeric_type * numeric_type → numeric_type

Multiplication

2 * 3 → 6

numeric_type / numeric_type → numeric_type

Division (for integral types, division truncates the result towards zero)

5.0 / 2 → 2.5000000000000000

5 / 2 → 2

(-5) / 2 → -2

numeric_type % numeric_type → numeric_type

Modulo (remainder); available for smallint, integer, bigint, and numeric

5 % 4 → 1

numeric ^ numeric → numeric

double precision ^ double precision → double precision

Exponentiation

2 ^ 3 → 8

Unlike typical mathematical practice, multiple uses of ^ will associate left to right by default:

2 ^ 3 ^ 3 → 512

2 ^ (3 ^ 3) → 134217728

|/ double precision → double precision

Square root

|/ 25.0 → 5

||/ double precision → double precision

Cube root

||/ 64.0 → 4

@ numeric_type → numeric_type

Absolute value

@ -5.0 → 5

integral_type & integral_type → integral_type

Bitwise AND

91 & 15 → 11

integral_type | integral_type → integral_type

Bitwise OR

32 | 3 → 35

integral_type # integral_type → integral_type

Bitwise exclusive OR

17 # 5 → 20

~ integral_type → integral_type

Bitwise NOT

~1 → -2

integral_type << integer → integral_type

Bitwise shift left

1 << 4 → 16

integral_type >> integer → integral_type

Bitwise shift right

8 >> 2 → 2
